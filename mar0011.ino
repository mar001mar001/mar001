// C++ code
//
#include <Adafruit_NeoPixel.h>

#define PIN 12            // Pin de datos del Neopixel
#define NUM_LEDS 64      // NÃºmero total de Neopixels en la tira
#define BRIGHTNESS 64    // Brillo del Neopixel (0-255)

Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUM_LEDS, PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  pixels.begin();               // Inicializar el objeto NeoPixel
  pixels.setBrightness(BRIGHTNESS);  // Establecer el brillo del Neopixel
  pixels.show();               // Mostrar los colores en los Neopixels

  //int matriz_O[64][4] =  {{255, 0, 0, 6}, {255, 0, 0, 88}, {255, 0, 0, 192}, {255, 0, 0, 198}, {255, 0, 0, 198}, {255, 0, 0, 193}, {255, 0, 0, 89}, {255, 0, 0, 6}, {255, 0, 0, 89}, {255, 0, 0, 205}, {255, 0, 0, 89}, {255, 0, 0, 22}, {255, 0, 0, 22}, {255, 0, 0, 88}, {255, 0, 0, 205}, {255, 0, 0, 89}, {254, 0, 0, 206}, {255, 0, 0, 132}, {255, 0, 0, 3}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 3}, {255, 0, 0, 132}, {254, 0, 0, 206}, {255, 0, 0, 241}, {255, 0, 0, 77}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 77}, {255, 0, 0, 241}, {255, 0, 0, 241}, {255, 0, 0, 77}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 77}, {255, 0, 0, 241}, {254, 0, 0, 206}, {255, 0, 0, 132}, {255, 0, 0, 3}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 3}, {255, 0, 0, 132}, {254, 0, 0, 206}, {255, 0, 0, 89}, {254, 0, 0, 206}, {255, 0, 0, 89}, {255, 0, 0, 22}, {255, 0, 0, 22}, {255, 0, 0, 88}, {254, 0, 0, 206}, {255, 0, 0, 89}, {255, 0, 0, 6}, {255, 0, 0, 89}, {255, 0, 0, 193}, {255, 0, 0, 198}, {255, 0, 0, 198}, {255, 0, 0, 193}, {255, 0, 0, 89}, {255, 0, 0, 6}};
  //int matriz_O[64][4] =  {{255, 0, 0, 6}, {255, 0, 0, 88}, {255, 0, 0, 192}, {255, 0, 0, 198}, {255, 0, 0, 198}, {255, 0, 0, 193}, {255, 0, 0, 89}, {255, 0, 0, 6}, {255, 0, 0, 89}, {255, 0, 0, 205}, {255, 0, 0, 89}, {255, 0, 0, 22}, {255, 0, 0, 22}, {255, 0, 0, 88}, {255, 0, 0, 205}, {255, 0, 0, 89}, {254, 0, 0, 206}, {255, 0, 0, 132}, {255, 0, 0, 3}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 3}, {255, 0, 0, 132}, {254, 0, 0, 206}, {255, 0, 0, 241}, {255, 0, 0, 77}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 77}, {255, 0, 0, 241}, {255, 0, 0, 241}, {255, 0, 0, 77}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 77}, {255, 0, 0, 241}, {254, 0, 0, 206}, {255, 0, 0, 132}, {255, 0, 0, 3}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 3}, {255, 0, 0, 132}, {254, 0, 0, 206}, {255, 0, 0, 89}, {254, 0, 0, 206}, {255, 0, 0, 89}, {255, 0, 0, 22}, {255, 0, 0, 22}, {255, 0, 0, 88}, {254, 0, 0, 206}, {255, 0, 0, 89}, {255, 0, 0, 6}, {255, 0, 0, 89}, {255, 0, 0, 193}, {255, 0, 0, 198}, {255, 0, 0, 198}, {255, 0, 0, 193}, {255, 0, 0, 89}, {255, 0, 0, 6}};
  //int matriz_M[64][4] =  {{0, 0, 0, 254}, {0, 0, 0, 189}, {0, 0, 0, 14}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 18}, {0, 0, 0, 198}, {0, 0, 0, 254}, {0, 0, 0, 232}, {0, 0, 0, 213}, {0, 0, 0, 57}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 66}, {0, 0, 0, 214}, {0, 0, 0, 235}, {0, 0, 0, 206}, {0, 0, 0, 158}, {0, 0, 0, 136}, {0, 0, 0, 2}, {0, 0, 0, 4}, {0, 0, 0, 147}, {0, 0, 0, 153}, {0, 0, 0, 214}, {0, 0, 0, 203}, {0, 0, 0, 79}, {0, 0, 0, 193}, {0, 0, 0, 27}, {0, 0, 0, 34}, {0, 0, 0, 195}, {0, 0, 0, 76}, {0, 0, 0, 212}, {0, 0, 0, 203}, {0, 0, 0, 33}, {0, 0, 0, 176}, {0, 0, 0, 90}, {0, 0, 0, 101}, {0, 0, 0, 168}, {0, 0, 0, 35}, {0, 0, 0, 212}, {0, 0, 0, 203}, {0, 0, 0, 21}, {0, 0, 0, 100}, {0, 0, 0, 180}, {0, 0, 0, 186}, {0, 0, 0, 89}, {0, 0, 0, 26}, {0, 0, 0, 212}, {0, 0, 0, 203}, {0, 0, 0, 21}, {0, 0, 0, 33}, {0, 0, 0, 210}, {0, 0, 0, 203}, {0, 0, 0, 27}, {0, 0, 0, 26}, {0, 0, 0, 212}, {0, 0, 0, 203}, {0, 0, 0, 21}, {0, 0, 0, 4}, {0, 0, 0, 69}, {0, 0, 0, 65}, {0, 0, 0, 3}, {0, 0, 0, 26}, {0, 0, 0, 212}};
  int matriz_T[64][4] =  {{255, 0, 0, 255}, {255, 0, 0, 255}, {255, 0, 0, 255}, {255, 0, 0, 255}, {255, 0, 0, 255}, {255, 0, 0, 255}, {255, 0, 0, 255}, {255, 0, 0, 255}, {255, 0, 0, 123}, {255, 0, 0, 123}, {255, 0, 0, 126}, {254, 0, 0, 212}, {254, 0, 0, 212}, {255, 0, 0, 126}, {255, 0, 0, 123}, {255, 0, 0, 123}, {0, 255, 0, 0}, {0, 0, 255, 0}, {255, 0, 0, 5}, {255, 0, 0, 171}, {255, 0, 0, 171}, {255, 0, 0, 5}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 5}, {255, 0, 0, 171}, {255, 0, 0, 171}, {255, 0, 0, 5}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 5}, {255, 0, 0, 171}, {255, 0, 0, 171}, {255, 0, 0, 5}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 5}, {255, 0, 0, 171}, {255, 0, 0, 171}, {255, 0, 0, 5}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 5}, {255, 0, 0, 171}, {255, 0, 0, 171}, {255, 0, 0, 5}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 0, 0, 5}, {255, 0, 0, 171}, {255, 0, 0, 171}, {255, 0, 0, 5}, {0, 0, 0, 0}, {0, 0, 0, 0}};
  
  // Actualizar los Neopixels con los colores de la matriz
  for (int i = 0; i < 64; i++) { 
    int R =  matriz_T[i][0];
    int G =	 matriz_T[i][1];
    int B =  matriz_T[i][2];
    pixels.setPixelColor(i, pixels.Color(R, G, B));  // Establecer el color del Neopixel
  }
  
  pixels.show();  // Mostrar los colores en los Neopixels
}
void loop() {
}